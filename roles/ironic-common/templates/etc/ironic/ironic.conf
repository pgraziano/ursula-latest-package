[DEFAULT]

debug = {{ ironic.logging.debug }}
verbose = {{ ironic.logging.verbose }}

log_dir = /var/log/ironic
use_stderr = false

enabled_drivers = {{ ironic.enabled_drivers|join(',') }}
host = {{ inventory_hostname }}

[api]
port = {{ endpoints.ironic.port.backend_api }}
public_endpoint = {{ endpoints.ironic.url.public }}

[keystone_authtoken]
# This should work, but doesn't ?
# identity_uri = {{ endpoints.keystone.url.internal }}/
auth_uri = {{ endpoints.keystone.url.internal }}/
auth_host = {{ endpoints.main }}
auth_port = {{ endpoints.keystone.port.haproxy_api }}
auth_protocol = https
admin_tenant_name = service
admin_user = ironic
admin_password = {{ secrets.service_password }}
cafile = {{ ironic.cafile }}

[neutron]
url = {{ endpoints.neutron.url.internal }}
{% if ironic.cleaning_network_uuid is defined %}
cleaning_network_uuid = {{ ironic.cleaning_network_uuid }}
{% endif %}
{% if ironic.provisioning_network_uuid is defined %}
provisioning_network_uuid = {{ ironic.provisioning_network_uuid }}
{% endif %}

[oslo_messaging_rabbit]
{% macro rabbitmq_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][hostvars[host]['primary_interface']]['ipv4']['address'] }}:{{ rabbitmq.port }}
   {%- else -%}
{{ hostvars[host][hostvars[host]['primary_interface']]['ipv4']['address'] }}:{{ rabbitmq.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

heartbeat_timeout_threshold = {{ ironic.heartbeat_timeout_threshold }}
{% if rabbitmq.cluster -%}
rabbit_hosts = {{ rabbitmq_hosts() }}
{% else -%}
rabbit_host = {{ endpoints.rabbit }}
rabbit_port = 5672
{% endif -%}
rabbit_userid = {{ rabbitmq.user }}
rabbit_password = {{ secrets.rabbit_password }}

[glance]
glance_host = {{ endpoints.main }}
auth_strategy = keystone

[pxe]
tftp_server = {{ ironic.tftp_server }}
tftp_root = {{ ironic.tftpboot_path }}
ipxe_enabled = true
pxe_config_template = $pybasedir/drivers/modules/ipxe_config.template
pxe_bootfile_name = undionly.kpxe
ipxe_boot_script = {{ ironic.httpboot_path }}/boot.ipxe

[deploy]
http_url = http://{{ ironic.http_server }}:{{ endpoints.ironic.port.internal_ipxe }}
http_root = {{ ironic.httpboot_path }}

[dhcp]
provider = neutron

[agent]

[conductor]
api_url = {{ endpoints.ironic.url.internal }}
force_power_state_during_sync = true
#configdrive_use_swift=false
#automated_clean=true
#clean_callback_timeout=1800

[database]
connection = mysql+pymysql://ironic:{{ secrets.db_password }}@{{ endpoints.db }}/ironic?charset=utf8

[inspector]
enabled = false

[ipmi]
retry_timeout = 60
min_command_interval = 10
