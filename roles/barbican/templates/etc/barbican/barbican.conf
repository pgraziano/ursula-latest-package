# {{ ansible_managed }}

[DEFAULT]

use_stderr = False
debug = False

bind_host = 0.0.0.0

bind_port = {{ endpoints.barbican.port.backend_api }}

host_href = {{ endpoints.barbican.url.public }}

log_file = /var/log/barbican/api.log

backlog = {{ barbican.backlog }}

max_allowed_secret_in_bytes = {{ barbican.max_allowed_secret_in_bytes }}
max_allowed_request_size_in_bytes = {{ barbican.max_allowed_request_size_in_bytes }}

sql_connection = mysql+pymysql://barbican:{{ secrets.db_password }}@{{ endpoints.db }}/barbican?charset=utf8
sql_idle_timeout = {{ barbican.sql_idle_timeout }}

default_limit_paging = {{ barbican.default_limit_paging }}

max_limit_paging = {{ barbican.max_limit_paging }}


{% macro rabbitmq_hosts() -%}
ampq_durable_queues = True
rabbit_userid = {{ rabbitmq.user }}
rabbit_password = {{ secrets.rabbit_password }}
rabbit_ha_queues = True
rabbit_port = {{ rabbitmq.port }}

rabbit_hosts= {{ rabbitmq_hosts() }}
{% endmacro -%}


{% if barbican_keystone_auth | bool %}
[keystone_authtoken]
identity_uri = {{ endpoints.identity_uri }}
auth_uri = {{ endpoints.auth_uri }}
admin_tenant_name = service
admin_user = barbican
admin_password = {{ secrets.service_password }}
signing_dir = /var/cache/barbican/api
cafile = {{ barbican.cafile }}
memcached_servers = {{ hostvars|ursula_memcache_hosts(groups, memcached.port) }}

{% endif %}

[oslo_policy]
policy_file=/etc/barbican/policy.json
policy_default_rule=default

[queue]
enable = False
namespace = 'barbican'
topic = 'barbican.workers'
version = '1.1'
server_name = 'barbican.queue'
asynchronous_workers = {{ barbican.asynchronous_workers }}

[retry_scheduler]
initial_delay_seconds = {{ barbican.initial_delay_seconds }}
periodic_interval_max_seconds = {{ barbican.periodic_interval_max_seconds }}

[quotas]
quota_secrets = -1
quota_orders = -1
quota_containers = -1
quota_consumers = -1
quota_cas = -1

[keystone_notifications]

enable = False
control_exchange = 'openstack'
topic = 'notifications'
allow_requeue = False
version = '1.0'
thread_pool_size = {{ barbican.thread_pool_size }}


[secretstore]
namespace = barbican.secretstore.plugin
enabled_secretstore_plugins = store_crypto


[crypto]
namespace = barbican.crypto.plugin
enabled_crypto_plugins = simple_crypto

[simple_crypto_plugin]
# the kek should be a 32-byte value which is base64 encoded
kek = 'YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXoxMjM0NTY='

[dogtag_plugin]
pem_path = '/etc/barbican/kra_admin_cert.pem'
dogtag_host = localhost
dogtag_port = 8443
nss_db_path = '/etc/barbican/alias'
nss_db_path_ca = '/etc/barbican/alias-ca'
nss_password = 'password123'
simple_cmc_profile = 'caOtherCert'
ca_expiration_time = 1
plugin_working_dir = '/etc/barbican/dogtag'

[kmip_plugin]
username = 'admin'
password = 'password'
host = localhost
port = 5696
keyfile = '/path/to/certs/cert.key'
certfile = '/path/to/certs/cert.crt'
ca_certs = '/path/to/certs/LocalCA.crt'

[certificate]
namespace = barbican.certificate.plugin
enabled_certificate_plugins = simple_certificate
enabled_certificate_plugins = snakeoil_ca

[certificate_event]
namespace = barbican.certificate.event.plugin
enabled_certificate_event_plugins = simple_certificate

[snakeoil_ca_plugin]
ca_cert_path = /etc/barbican/snakeoil-ca.crt
ca_cert_key_path = /etc/barbican/snakeoil-ca.key
ca_cert_chain_path = /etc/barbican/snakeoil-ca.chain
ca_cert_pkcs7_path = /etc/barbican/snakeoil-ca.p7b
subca_cert_key_directory=/etc/barbican/snakeoil-cas
