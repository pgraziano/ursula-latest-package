[DEFAULT]

debug = {{ magnum.logging.debug }}
verbose = {{ magnum.logging.verbose }}
log_dir = /var/log/magnum
use_stderr = false

[api]

# The port for the Magnum API server. (integer value)
port = 9512

# The listen IP for the Magnum API server. (string value)
host = 0.0.0.0

[certificates]
cert_manager_type = local
storage_path = /var/lib/magnum/certificates/

[trust]
trustee_domain_name = magnum
trustee_domain_admin_name = magnum_domain_admin
trustee_domain_admin_password = DOMAIN_ADMIN_PASS

[cluster]

# Location of template to build a k8s cluster on atomic. (string
# value)
# Deprecated group/name - [bay_heat]/template_path
#k8s_atomic_template_path = $pybasedir/templates/heat-kubernetes/kubecluster.yaml

# Location of template to build a k8s cluster on CoreOS. (string
# value)
#k8s_coreos_template_path = $pybasedir/templates/heat-kubernetes/kubecluster-coreos.yaml

# Url for etcd public discovery endpoint. (string value)
#etcd_discovery_service_endpoint_format = https://discovery.etcd.io/new?size=%(size)d

# coreos discovery token url. (string value)
# Deprecated group/name - [bay_heat]/discovery_token_url
#coreos_discovery_token_url = <None>

# Location of template to build a swarm cluster on atomic. (string
# value)
#swarm_atomic_template_path = $pybasedir/templates/docker-swarm/swarm.yaml

# Format string to use for swarm discovery url. Available values:
# bay_id, bay_uuid. Example: "etcd://etcd.example.com/\%(bay_uuid)s"
# (string value)
#swarm_discovery_url_format = <None>

# Indicates Swarm discovery should use public endpoint. (boolean
# value)
#public_swarm_discovery = true

# Url for swarm public discovery endpoint. (string value)
#public_swarm_discovery_url = https://discovery-stage.hub.docker.com/v1/clusters

# Location of template to build a Mesos cluster on Ubuntu. (string
# value)
#mesos_ubuntu_template_path = $pybasedir/templates/heat-mesos/mesoscluster.yaml

# Enabled bay definition entry points. (list value)
#enabled_definitions = magnum_vm_atomic_k8s,magnum_vm_coreos_k8s,magnum_vm_atomic_swarm,magnum_vm_ubuntu_mesos


[cluster_heat]

# Number of attempts to query the Heat stack for finding out the
# status of the created stack and getting template outputs.  This
# value is ignored during bay creation if timeout is set as the poll
# will continue until bay creation either ends or times out. (integer
# value)
#max_attempts = 2000

# Sleep time interval between two attempts of querying the Heat stack.
# This interval is in seconds. (integer value)
#wait_interval = 1

# The length of time to let bay creation continue.  This interval is
# in minutes.  The default is no timeout. (integer value)
#bay_create_timeout = <None>


[conductor]

# The queue to add conductor tasks to. (string value)
#topic = magnum-conductor

# RPC timeout for the conductor liveness check that is used for bay
# locking. (integer value)
#conductor_life_check_timeout = 4


[database]

connection=mysql+pymysql://magnum:{{ secrets.db_password }}@{{ endpoints.db }}/magnum?charset=utf8

[docker]

# Docker remote api version. Override it according to specific docker
# api version in your environment. (string value)
#docker_remote_api_version = 1.17

# Default timeout in seconds for docker client operations. (integer
# value)
#default_timeout = 10

# If set, ignore any SSL validation issues (boolean value)
#api_insecure = false

# Location of CA certificates file for securing docker api requests
# (tlscacert). (string value)
#ca_file = <None>

# Location of TLS certificate file for securing docker api requests
# (tlscert). (string value)
#cert_file = <None>

# Location of TLS private key file for securing docker api requests
# (tlskey). (string value)
#key_file = <None>


[glance_client]

# Region in Identity service catalog to use for communication with the
# OpenStack service. (string value)
#region_name = <None>

# Type of endpoint in Identity service catalog to use for
# communication with the OpenStack service. (string value)
#endpoint_type = publicURL


[heat_client]

# Region in Identity service catalog to use for communication with the
# OpenStack service. (string value)
#region_name = <None>

# Type of endpoint in Identity service catalog to use for
# communication with the OpenStack service. (string value)
#endpoint_type = publicURL

# Optional CA cert file to use in SSL connections. (string value)
ca_file = {{ magnum.cafile }}

[keystone_authtoken]

identity_uri = {{ endpoints.identity_uri }}
auth_uri = {{ endpoints.auth_uri }}
admin_tenant_name = service
admin_user = magnum
admin_password = {{ secrets.service_password }}
cafile = {{ magnum.cafile }}

[kubernetes]

# Default protocol of k8s master endpoint (http or https). (string
# value)
#k8s_protocol = http

# Default port of the k8s master endpoint. (integer value)
#k8s_port = 8080


[magnum_client]

# Region in Identity service catalog to use for communication with the
# OpenStack service. (string value)
#region_name = <None>

# Type of endpoint in Identity service catalog to use for
# communication with the OpenStack service. (string value)
#endpoint_type = publicURL

[oslo_concurrency]

# Enables or disables inter-process locks. (boolean value)
# Deprecated group/name - [DEFAULT]/disable_process_locking
#disable_process_locking = false

# Directory to use for lock files.  For security, the specified
# directory should only be writable by the user running the processes
# that need locking. Defaults to environment variable OSLO_LOCK_PATH.
# If external locks are used, a lock path must be set. (string value)
# Deprecated group/name - [DEFAULT]/lock_path
#lock_path = <None>


[oslo_messaging_rabbit]

{% macro rabbitmq_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ rabbitmq.port }}
   {%- else -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ rabbitmq.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

heartbeat_timeout_threshold = {{ magnum.heartbeat_timeout_threshold }}
{% if rabbitmq.cluster -%}
rabbit_hosts = {{ rabbitmq_hosts() }}
{% else -%}
rabbit_host = {{ endpoints.rabbit }}
rabbit_port = 5672
{% endif -%}
rabbit_userid = {{ rabbitmq.user }}
rabbit_password = {{ secrets.rabbit_password }}


[oslo_policy]

# The JSON file that defines policies. (string value)
# Deprecated group/name - [DEFAULT]/policy_file
#policy_file = policy.json

# Default rule. Enforced when a requested rule is not found. (string
# value)
# Deprecated group/name - [DEFAULT]/policy_default_rule
#policy_default_rule = default

# Directories where policy configuration files are stored. They can be
# relative to any directory in the search path defined by the
# config_dir option, or absolute paths. The file defined by
# policy_file must exist for these directories to be searched.
# Missing or empty directories are ignored. (multi valued)
# Deprecated group/name - [DEFAULT]/policy_dirs
# This option is deprecated for removal.
# Its value may be silently ignored in the future.
#policy_dirs = policy.d
