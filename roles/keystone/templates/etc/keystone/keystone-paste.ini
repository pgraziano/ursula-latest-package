# Keystone PasteDeploy configuration file.

[filter:debug]
use = egg:oslo.middleware#debug

[filter:request_id]
use = egg:oslo.middleware#request_id

[filter:build_auth_context]
use = egg:keystone#build_auth_context

[filter:token_auth]
use = egg:keystone#token_auth

[filter:admin_token_auth]
# This is deprecated in the M release and will be removed in the O release.
# Use `keystone-manage bootstrap` and remove this from the pipelines below.
use = egg:keystone#admin_token_auth

[filter:json_body]
use = egg:keystone#json_body

[filter:user_crud_extension]
paste.filter_factory = keystone.contrib.user_crud:CrudExtension.factory

[filter:cors]
use = egg:oslo.middleware#cors
oslo_config_project = keystone
latent_allow_headers = X-Auth-Token, X-Openstack-Request-Id, X-Subject-Token, X-Project-Id, X-Project-Name, X-Project-Domain-Id, X-Project-Domain-Name, X-Domain-Id, X-Domain-Name
latent_expose_headers = X-Auth-Token, X-Openstack-Request-Id, X-Subject-Token
latent_allow_methods = GET, PUT, POST, DELETE, PATCH

[filter:crud_extension]
paste.filter_factory = keystone.contrib.admin_crud:CrudExtension.factory

[filter:ec2_extension]
use = egg:keystone#ec2_extension

[filter:ec2_extension_v3]
use = egg:keystone#ec2_extension_v3

[filter:s3_extension]
use = egg:keystone#s3_extension

[filter:url_normalize]
use = egg:keystone#url_normalize

[filter:sizelimit]
use = egg:oslo.middleware#sizelimit

{% if keystone.jellyroll|bool %}
[filter:passval]
paste.filter_factory = jellyroll.keystone.password_validation:KeystonePasswordValidation.factory

[filter:unauthlog]
paste.filter_factory = jellyroll.keystone.unauthorized_logger:UnauthorizedLogger.factory
memcache_hosts = {{ endpoints.memcache }}

[filter:rbac_filter]
paste.filter_factory = jellyroll.keystone.rbac_filter:KeystoneRBACFilter.factory
{% endif %}

[filter:http_proxy_to_wsgi]
paste.filter_factory = oslo_middleware:HTTPProxyToWSGI.factory

[filter:healthcheck]
paste.filter_factory = oslo_middleware:Healthcheck.factory
backends = disable_by_file
disable_by_file_path = /etc/keystone/healthcheck_disable

[app:public_service]
use = egg:keystone#public_service

[app:service_v3]
use = egg:keystone#service_v3

[app:admin_service]
use = egg:keystone#admin_service

[pipeline:public_api]
pipeline = healthcheck cors sizelimit url_normalize http_proxy_to_wsgi request_id build_auth_context token_auth json_body ec2_extension{{ ' passval unauthlog' if keystone.jellyroll|bool else '' }} public_service

[pipeline:admin_api]
pipeline = healthcheck cors sizelimit url_normalize http_proxy_to_wsgi request_id build_auth_context token_auth json_body ec2_extension s3_extension{{ ' passval unauthlog' if keystone.jellyroll|bool else '' }} admin_service

[pipeline:api_v3]
pipeline = healthcheck cors sizelimit url_normalize http_proxy_to_wsgi request_id build_auth_context token_auth json_body ec2_extension_v3 s3_extension{{ ' rbac_filter passval unauthlog' if keystone.jellyroll|bool else '' }} service_v3

[app:public_version_service]
use = egg:keystone#public_version_service

[app:admin_version_service]
use = egg:keystone#admin_version_service

[pipeline:public_version_api]
pipeline = healthcheck cors sizelimit url_normalize http_proxy_to_wsgi public_version_service

[pipeline:admin_version_api]
pipeline = healthcheck cors sizelimit url_normalize http_proxy_to_wsgi admin_version_service

[composite:main]
use = egg:Paste#urlmap
/v2.0 = public_api
/v3 = api_v3
/ = public_version_api

[composite:admin]
use = egg:Paste#urlmap
/v2.0 = admin_api
/v3 = api_v3
/ = admin_version_api
