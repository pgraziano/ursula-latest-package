# {{ ansible_managed }}

[DEFAULT]
debug = {{ keystone.logging.debug }}

public_endpoint = {{ endpoints.keystone.url.public }}/
admin_endpoint = {{ endpoints.keystone.url.admin }}/

public_port = {{ endpoints.keystone.port.backend_api }}
admin_port = {{ endpoints.keystone_admin.port.backend_api }}

# Logging #
log_dir = /var/log/keystone
default_log_levels=keystonemiddleware=INFO
use_stderr = false

notification_format = cadf
notification_driver = log

[database]
connection=mysql+pymysql://keystone:{{ secrets.db_password }}@{{ endpoints.db }}/keystone?charset=utf8

[resource]
admin_project_name = {{ keystone.admin_project_name }}
admin_project_domain_name = {{ keystone.admin_project_domain_name }}

[identity]
driver = sql
{% if keystone.ldap_domain.enabled|bool %}
domain_specific_drivers_enabled=true
domain_config_dir=/etc/keystone/domains
{% endif %}

[catalog]
driver = sql

[token]
driver = sql
provider = uuid

# Amount of time a token should remain valid (in seconds)
expiration = {{ keystone.token_expiration_in_seconds }}

{% macro memcached_hosts() -%}
{% for host in groups['controller'] -%}
   {% if loop.last -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ memcached.port }}
   {%- else -%}
{{ hostvars[host][primary_interface]['ipv4']['address'] }}:{{ memcached.port }},
   {%- endif -%}
{% endfor -%}
{% endmacro -%}

[memcache]
servers = {{ memcached_hosts() }}

[policy]
# driver = keystone.policy.backends.sql.Policy

[ec2]
# driver = keystone.contrib.ec2.backends.kvs.Ec2

[ssl]
enable = False
#certfile = /etc/keystone/ssl/certs/keystone.pem
#keyfile = /etc/keystone/ssl/private/keystonekey.pem
#ca_certs = /etc/keystone/ssl/certs/ca.pem
#cert_required = True

[signing]
#certfile = /etc/keystone/ssl/certs/signing_cert.pem
#keyfile = /etc/keystone/ssl/private/signing_key.pem
#ca_certs = /etc/keystone/ssl/certs/ca.pem
#key_size = 1024
#valid_days = 3650
#ca_password = None

[paste_deploy]
config_file = /etc/keystone/keystone-paste.ini

[revoke]
driver = keystone.contrib.revoke.backends.sql.Revoke

[oslo_middleware]
enable_proxy_headers_parsing = True

{% if keystone.federation.enabled|bool -%}

[auth]
methods = external,password,token{{ ',saml2' if keystone.federation.enabled|bool and keystone.federation.sp.saml.enabled|bool else '' }}
{%- if keystone.federation.enabled|bool and keystone.federation.sp.oidc.enabled|bool -%}
{%- for sp in keystone.federation.sp.oidc.providers_info -%}
,{{ sp.protocol_name }}
{%- endfor -%}
{%- endif %}

[federation]
driver = sql
trusted_dashboard = https://{{ fqdn }}/auth/websso/

{% if keystone.federation.enabled|bool and keystone.federation.sp.oidc.enabled|bool -%}
{% for sp in keystone.federation.sp.oidc.providers_info -%}
[{{ sp.protocol_name }}]
remote_id_attribute = {{ sp.remote_id_attribute }}

{% endfor -%}
{%- endif %}

{% if keystone.federation.enabled|bool  and keystone.federation.sp.saml.enabled|bool -%}

[saml2]
remote_id_attribute = Shib-Identity-Provider
{% endif -%}


{% if keystone.federation.idp.k2k.enabled|bool -%}

[saml]
certfile=/etc/keystone/keystone-saml.crt
keyfile=/etc/keystone/keystone-saml.pem
idp_entity_id=https://{{ fqdn }}/v3/OS-FEDERATION/saml2/idp
idp_sso_endpoint=https://{{ fqdn }}/v3/OS-FEDERATION/saml2/sso
idp_metadata_path=/etc/keystone/keystone_idp_metadata.xml
{% endif -%}

{% endif -%}

{% if keystone.security_compliance.enabled|bool -%}
[security_compliance]
password_regex = {{ keystone.security_compliance.password_regex }}
password_regex_description = {{ keystone.security_compliance.password_regex_description }}
{% endif -%}
